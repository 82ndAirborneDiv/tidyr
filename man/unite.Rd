% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unite.R
\name{unite}
\alias{unite}
\title{Unite multiple columns into one.}
\usage{
unite(data, col, ..., sep = "_", remove = TRUE)
}
\arguments{
\item{data}{A data frame.}

\item{col}{The name of the new column, as a string or symbol.

This argument is passed by expression and supports
\link[rlang:quasiquotation]{quasiquotation} (you can unquote strings
and symbols). The name is captured from the expression with
\code{\link[rlang:quo_name]{rlang::quo_name()}} (note that this kind of interface where
symbols do not represent actual objects is now discouraged in the
tidyverse; we support it here for backward compatibility).}

\item{...}{A selection of columns. These arguments are passed to
\code{\link[tidyselect:vars_select]{tidyselect::vars_select()}} and are treated specially for
selection:\preformatted{* Calls and complex expressions are evaluated in the context.
  You cannot refer to data columns in these expressions.

* Bare symbols are evaluated in the data but not the context.
  You can only refer to data columns with bare symbols.

* In addition, `c()` and the `:` operators are also evaluated
  in the data (this is an exception to the rule above). Select
  all variables between x and z with `x:z`, exclude y with
  `-y`. You can refer to columns but not to objects from the
  context. If you need to refer to contextual objects, you can
  unquote them with the tidy eval operator `!!`.
}

For instance, \code{col1:col3} creates a selection that refers to data
objects, while \code{seq(start, end)} creates a selection that refers
to contextual objects.}

\item{sep}{Separator to use between values.}

\item{remove}{If \code{TRUE}, remove input columns from output data frame.}
}
\description{
Convenience function to paste together multiple columns into one.
}
\examples{
library(dplyr)
unite_(mtcars, "vs_am", c("vs","am"))

# Separate is the complement of unite
mtcars \%>\%
  unite(vs_am, vs, am) \%>\%
  separate(vs_am, c("vs", "am"))
}
\seealso{
\code{\link[=separate]{separate()}}, the complement.
}
